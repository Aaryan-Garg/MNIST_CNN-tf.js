{"id":"index.html","dependencies":[{"name":"./tfjs-examples.css","dynamic":true,"resolved":"/Users/aaryan/Desktop/MNIST_CNN-tf.js/tfjs-examples.css","parent":"/Users/aaryan/Desktop/MNIST_CNN-tf.js/index.html"},{"name":"./index.js","dynamic":true,"resolved":"/Users/aaryan/Desktop/MNIST_CNN-tf.js/index.js","parent":"/Users/aaryan/Desktop/MNIST_CNN-tf.js/index.html"},{"name":"/Users/aaryan/Desktop/MNIST_CNN-tf.js/.babelrc","includedInParent":true,"mtime":1591228982804},{"name":"/Users/aaryan/Desktop/MNIST_CNN-tf.js/package.json","includedInParent":true,"mtime":1591229752128}],"generated":{"html":"<html>\n  <head>\n    <title>MNIST in TensorFlow.js Layers API</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"/f0d2e505060e0c66665f847f35e444a2.css\">\n    <script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js\"></script>\n    <style>#train {\n        margin-top: 10px;\n      }\n\n      label {\n        display: inline-block;\n        width: 250px;\n        padding: 6px 0 6px 0;\n      }\n\n      .canvases {\n        display: inline-block;\n      }\n\n      .prediction-canvas {\n        width: 100px;\n      }\n\n      .pred {\n        font-size: 20px;\n        line-height: 25px;\n        width: 100px;\n      }\n\n      .pred-correct {\n        background-color: #00cf1c;\n      }\n\n      .pred-incorrect {\n        background-color: red;\n      }\n\n      .pred-container {\n        display: inline-block;\n        width: 100px;\n        margin: 10px;\n      }</style>\n  </head>\n\n  <body>\n    <div class=\"tfjs-example-container\">\n      <section class=\"title-area\">\n        <h1 style=\"\n            font-family: Roboto, sans-serif;\n            -moz-osx-font-smoothing: grayscale;\n            -webkit-font-smoothing: antialiased;\n            font-size: 3rem;\n            line-height: 3.125rem;\n            font-weight: 400;\n            letter-spacing: normal;\n            text-decoration: inherit;\n            text-transform: inherit;\n          \">\n          Train a simple Convolutional Neural Network without writing code!\n        </h1>\n        <p class=\"subtitle\" style=\"\n            font-family: Roboto, sans-serif;\n            -moz-osx-font-smoothing: grayscale;\n            -webkit-font-smoothing: antialiased;\n            margin-top: 0.5em;\n            font-size: 1.25rem;\n            line-height: 2rem;\n            font-weight: 500;\n            letter-spacing: 0.0125em;\n            text-decoration: inherit;\n            text-transform: inherit;\n          \">\n          Train a CNN to recognize handwritten digits from the MNIST database\n          using the tf.layers api.\n        </p>\n      </section>\n\n      <section>\n        <p class=\"section-head\">\n          Description\n        </p>\n        <p>\n          This examples lets you train a handwritten digit recognizer using\n          either a Convolutional Neural Network (also known as a ConvNet or CNN)\n          The CNN contains 3 conv2D layers with 16, 32, 32 3x3-filters\n          respectively. Each of the conv2D layers is followed by a maxPool2D\n          downsampling layer. After the convolutions, we flatten the output from\n          the 2D filters to a 1D vector to prepare it for input into our last\n          layer. This is common practice when feeding higher dimensional data to\n          a final classification output layer. Our last layer is a dense layer\n          which has 10 output units, one for each output class (i.e. 0, 1, 2, 3,\n          4, 5, 6, 7, 8, 9). Here the classes actually represent numbers, but\n          it's the same idea if you had classes that represented other entities\n          like dogs and cats (two output classes: 0, 1). We use the softmax\n          function as the activation for the output layer as it creates a\n          probability distribution over our 10 classes so their output values\n          sum to 1.\n        </p>\n        <p>The MNIST dataset is used as training data.</p>\n      </section>\n\n      <section>\n        <p class=\"section-head\">Training Parameters</p>\n        <div>\n          <label>No. of training epochs:</label>\n          <input id=\"train-epochs\" value=\"3\">\n        </div>\n        <div>\n          <label>Optimizer:</label>\n          <select id=\"optimizer\">\n            <option>Adam</option>\n            <option>RMSprop</option>\n            <option>SGD</option>\n          </select>\n        </div>\n        <div>\n          <label>Learning Rate:</label>\n          <input id=\"learning-rate\" value=\"0.003\">\n        </div>\n        <div>\n          <label>Batch Size:</label>\n          <input id=\"batch-size\" value=\"640\">\n        </div>\n\n        <button id=\"train\" class=\"btn btn-dark\">\n          Load Data and Train Model\n        </button>\n      </section>\n\n      <section>\n        <p class=\"section-head\">Training Progress</p>\n        <p id=\"status\"></p>\n        <p id=\"message\"></p>\n\n        <div id=\"stats\">\n          <div class=\"canvases\">\n            <label id=\"loss-label\"></label>\n            <div id=\"loss-canvas\"></div>\n          </div>\n          <div class=\"canvases\">\n            <label id=\"accuracy-label\"></label>\n            <div id=\"accuracy-canvas\"></div>\n          </div>\n        </div>\n      </section>\n\n      <section>\n        <p class=\"section-head\">Inference Examples</p>\n        <div id=\"images\"></div>\n      </section>\n      <section>\n        <p class=\"section-head\" id=\"heading\">Test Your Model</p>\n        <p>\n          Feel free to draw digits on the small blackboard there and get your\n          model to predict the numbers!\n        </p>\n        <div id=\"canvas_box\" class=\"canvas-box\" style=\"margin-left: 33em; margin-bottom: 1em;\"></div>\n        <button id=\"clear-button\" class=\"btn btn-dark\" margintop=\"1em\" marginbottom=\"1em\" style=\"margin: auto; width: 100%; padding: 10px;\">\n          Clear\n        </button>\n        <button id=\"predict-button\" class=\"btn btn-dark\" margintop=\"1em\" marginbottom=\"1em\" style=\"margin: auto; width: 100%; padding: 10px;\">\n          Predict\n        </button>\n        <div id=\"chart_box\"></div>\n      </section>\n      <section>\n        <p class=\"section-head\" id=\"heading\">Visualise Layers</p>\n        <p>\n          Now, you can visualise the layers by seeing the transformation done on\n          image by each layer.\n        </p>\n        <div>\n          <p id=\"log\" margintop=\"1em\"></p>\n        </div>\n        <button id=\"visualise-layer0\" class=\"btn btn-dark\" margintop=\"1em\" marginbottom=\"1em\">\n          Visualise Layer-1\n        </button>\n        <p margintop=\"1em\">Layer-1 is a conv2D layer with 16 filters.</p>\n        <div id=\"Layer0\"></div>\n        <button id=\"visualise-layer1\" class=\"btn btn-dark\" margintop=\"1em\" marginbottom=\"1em\">\n          Visualise Layer-2\n        </button>\n        <p margintop=\"1em\">\n          Layer-2 is a downsampling layer that downsamples the input by a factor\n          of 2 in both dimensions.\n        </p>\n        <div id=\"Layer1\"></div>\n        <button id=\"visualise-layer2\" class=\"btn btn-dark\" margintop=\"1em\" marginbottom=\"1em\">\n          Visualise Layer-3\n        </button>\n        <p margintop=\"1em\">Layer-3 is a conv2D layer with 32 filters.</p>\n        <div id=\"Layer2\"></div>\n        <button id=\"visualise-layer3\" class=\"btn btn-dark\" margintop=\"1em\" marginbottom=\"1em\">\n          Visualise Layer-4\n        </button>\n        <p margintop=\"1em\">\n          Layer-4 is a downsampling layer that downsamples the input by a factor\n          of 2 in both dimensions.\n        </p>\n        <div id=\"Layer3\"></div>\n        <button id=\"visualise-layer4\" class=\"btn btn-dark\" margintop=\"1em\" marginbottom=\"1em\">\n          Visualise Layer-5\n        </button>\n        <p margintop=\"1em\">Layer-5 is a conv2D layer with 32 filters.</p>\n        <div id=\"Layer4\"></div>\n        <button id=\"visualise-layer5\" class=\"btn btn-dark\" margintop=\"1em\" marginbottom=\"1em\">\n          Visualise Layer-6\n        </button>\n        <p margintop=\"1em\">Layer-6 is a flattening layer</p>\n        <div id=\"Layer5\"></div>\n        <div id=\"Spacing1\" margintop=\"1em\"></div>\n        <button id=\"visualise-layer6\" class=\"btn btn-dark\" margintop=\"1em\" marginbottom=\"1em\">\n          Visualise Layer-7\n        </button>\n        <p margintop=\"1em\">Layer-7 is a dense layer with 64 units.</p>\n        <div id=\"Layer6\"></div>\n        <div id=\"Spacing\" margintop=\"1em\"></div>\n        <button id=\"visualise-layer7\" class=\"btn btn-dark\" margintop=\"1em\" marginbottom=\"1em\">\n          Visualise Layer-8\n        </button>\n        <p margintop=\"1em\" marginbottom=\"1em\">\n          Layer-8 is also a dense layer, but it has 10 units. One for each type\n          of output.\n        </p>\n        <div id=\"Layer7\"></div>\n        <div id=\"Spacing2\" margintop=\"1em\"></div>\n      </section>\n    </div>\n    <script src=\"/168726dbe96b3ce427e7fedce31bb0bc.js\"></script>\n    <!-- <script src=\"app.js\"></script> -->\n  </body>\n</html>\n"},"hash":"dea26e26ff9422f9e4b2011bc3bf1f18","cacheData":{"env":{}}}